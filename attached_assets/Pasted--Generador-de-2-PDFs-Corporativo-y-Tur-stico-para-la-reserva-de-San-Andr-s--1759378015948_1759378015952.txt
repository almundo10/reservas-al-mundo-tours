# Generador de 2 PDFs (Corporativo y Turístico) para la reserva de San Andrés
# ---------------------------------------------------------------
# Requisitos:
#   pip install reportlab
# Archivos de imagen (guardar en la MISMA carpeta que este script):
#   - logo.png                        (logo de AL Mundo Tours)
#   - banner1.jpg                     (1er banner: foto portada)
#   - banner2.jpg                     (2º banner: foto del destino)
#   - airline_ida.png                 (logo aerolínea tramo de ida: tamaño aprox 120x120px)
#   - airline_regreso.png             (logo aerolínea tramo de regreso)
#   - hotel1.jpg, hotel2.jpg, hotel3.jpg   (fotos del hotel, pequeñas, en una fila)
# Nota: si algún archivo no existe el script mostrará un texto “Falta la imagen”.
# Salida:
#   - Reserva_SanAndres_Corporativo.pdf
#   - Reserva_SanAndres_Turistico.pdf

from reportlab.lib.pagesizes import A4
from reportlab.platypus import (
    SimpleDocTemplate, Paragraph, Spacer, Image, Table, TableStyle,
    PageBreak, Flowable
)
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.enums import TA_CENTER, TA_LEFT, TA_RIGHT
from reportlab.lib import colors
from reportlab.lib.units import cm
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

# ----------------------- CONFIGURACIÓN DE DATOS ----------------------- #
AGENCIA = {
    "nombre": "AL Mundo Tours",
    "direccion": "Calle 38 No 21-31, Tuluá – Colombia",
    "telefono": "+57 (601) 745 89 00",
    "correo": "infos@almundotours.com",
    "logo": "logo.png",
}

RESERVA = {
    "destino": "San Andrés, Colombia",
    "codigo": "AL4167",
    "fecha_creacion": "30 de septiembre de 2025",
    "cliente": "Jesus Hernando Castillo",
    "fechas": "21 al 24 de octubre de 2025",
    "pax": {"adultos": 4, "ninos": 1},

    # Descripción y Puntos de interés (aparecen bajo el 2º banner)
    "destino_descripcion": (
        "San Andrés, paraíso del Caribe colombiano con mar de siete colores, arena blanca y arrecifes ideales para snorkel y buceo."
    ),
    "destino_pois": ["Johnny Cay", "El Acuario", "Hoyo Soplador", "Playa Spratt Bight", "West View"],

    # Vuelos en formato narrativo con CÓDIGO DE RESERVA y LOGO de la aerolínea
    "rutas": {
        "ida": {
            "texto": "El 21 de octubre de 2025 vuelo desde Cali hacia San Andrés, con una conexión de aproximadamente 3 h 56 min.",
            "detalle": "Salida 13:13 – Llegada 17:09 (itinerario sujeto a cambios).",
            "aerolinea": "Avianca",
            "codigo_reserva": "ABC123",
            "logo": "airline_ida.png"
        },
        "regreso": {
            "texto": "El 24 de octubre de 2025 regreso en vuelo directo San Andrés → Cali.",
            "detalle": "Salida 10:33 – Llegada 12:40 · Duración aprox. 2 h 07 min.",
            "aerolinea": "Avianca",
            "codigo_reserva": "ABC123",
            "logo": "airline_regreso.png"
        },
    },

    # HOTEL / ALOJAMIENTO
    "hotel": {
        "nombre": "Hotel Blue Island – Habitación quíntuple",
        "direccion": "(Dirección del hotel)",
        "telefono": "+57 (xxx) xxx xxxx",
        "codigo_reserva": "(Código de reserva del hotel)",
        "check_in": "15:00",
        "check_out": "12:00",
        "habitaciones": 1,
        "noches": 3,
        "notas": "(Notas para el hotel, requerimientos especiales, etc.)",
        "fotos": ["hotel1.jpg", "hotel2.jpg", "hotel3.jpg"],
    },

    # Alimentación
    "alimentacion": "Desayuno",

    # Pasajeros (lista completa; los NOMBRES se muestran también en portada)
    "pasajeros": [
        ("Jesus Hernando Castillo Vargas", "1116245015", "28/09/1989"),
        ("Maricel Vargas Hernandez", "29872575", "10/08/1961"),
        ("Viviana Andrea Gomez Garcia", "1116269773", "04/11/1995"),
        ("Samuel Castillo Gomez", "1116280619", "21/10/2016"),
        ("Paola Andrea Castillo Vargas", "31793190", "03/06/1981"),
    ],

    # Tours con detalle de incluye/no incluye
    "tours": [
        {"nombre": "Acuario + Johnny Cay", "incluye": ["Traslados marítimos", "Guía local"], "no_incluye": ["Impuestos de muelle", "Alimentación"]},
        {"nombre": "Bahía Diurna", "incluye": ["Recorrido panorámico", "Hidratación básica"], "no_incluye": ["Actividades opcionales", "Propinas"]},
        {"nombre": "Vuelta a la Isla (terrestre)", "incluye": ["Transporte terrestre compartido", "Paradas fotográficas"], "no_incluye": ["Entradas a atracciones", "Consumos personales"]},
    ],

    # Listas generales
    "incluye": [
        "Alojamiento según descripción.",
        "Plan de alimentación: Desayuno.",
        "Traslados aeropuerto ↔ hotel.",
        "Asistencia médica durante la estadía.",
        "Tours según listado en sección de TOURS.",
    ],
    "no_incluye": [
        "Gastos no especificados.",
        "Seguro hotelero (si aplica, pago directo).",
        "Tarifa de ingreso a la isla por valor de $146.000 (pago directo).",
        "Selección de silla: sujeta a disponibilidad y costo adicional si desean quedar juntos.",
        "Equipaje: solo morral sin rodachines (según política de la tarifa).",
    ],

    # Precio
    "precio": {"total": "$ 4.351.028", "abono": "$ 2.300.000", "saldo": "$ 2.051.028", "clausula": "Esta tarifa está sujeta a cambios sin previo aviso."},

    # Imágenes (solo 2 banners)
    "imagenes": {"portada": "banner1.jpg", "destino": "banner2.jpg"},

    # Link editable a T&C (aparece con estilo azul y clickeable)
    "terminos_url": "https://drive.google.com/file/d/1lbmxkM00HuGz1XNP216Z-RvvmPkYwY77/view?usp=drive_link",
}

# ----------------------- ESTILOS ----------------------- #
# Registrar Poppins si está disponible; fallback a Helvetica
try:
    if os.path.exists('Poppins-Regular.ttf') and os.path.exists('Poppins-Bold.ttf'):
        pdfmetrics.registerFont(TTFont('Poppins', 'Poppins-Regular.ttf'))
        pdfmetrics.registerFont(TTFont('Poppins-Bold', 'Poppins-Bold.ttf'))
        BODY_FONT = 'Poppins'
        TITLE_FONT = 'Poppins-Bold'
    else:
        BODY_FONT = 'Helvetica'
        TITLE_FONT = 'Helvetica-Bold'
except Exception:
    BODY_FONT = 'Helvetica'
    TITLE_FONT = 'Helvetica-Bold'

base = getSampleStyleSheet()
# Tamaños uniformes: cuerpo 11, subtítulos 14, títulos 20
H1 = ParagraphStyle(name="H1", parent=base['Heading1'], alignment=TA_LEFT, fontName=TITLE_FONT, fontSize=20, leading=24, spaceAfter=10)
H2 = ParagraphStyle(name="H2", parent=base['Heading2'], alignment=TA_LEFT, fontName=TITLE_FONT, fontSize=14, leading=18, spaceAfter=6)
P = ParagraphStyle(name="P", parent=base['BodyText'], fontName=BODY_FONT, fontSize=11, leading=15)
P_small = ParagraphStyle(name="P_small", parent=P, fontSize=9, leading=12)
P_center = ParagraphStyle(name="P_center", parent=P, alignment=TA_CENTER)
P_right = ParagraphStyle(name="P_right", parent=P, alignment=TA_RIGHT)
CodeBig = ParagraphStyle(name="CodeBig", parent=P, fontName=TITLE_FONT, fontSize=24, leading=28)

# Esquemas de color (turístico usa azul para títulos)
H1_corp = ParagraphStyle(name="H1_corp", parent=H1, textColor=colors.black)
H2_corp = ParagraphStyle(name="H2_corp", parent=H2, textColor=colors.black)
P_corp = ParagraphStyle(name="P_corp", parent=P, textColor=colors.black)

H1_tur = ParagraphStyle(name="H1_tur", parent=H1, textColor=colors.HexColor("#0a6aa1"))
H2_tur = ParagraphStyle(name="H2_tur", parent=H2, textColor=colors.HexColor("#0a6aa1"))
P_tur = ParagraphStyle(name="P_tur", parent=P, textColor=colors.HexColor("#333333"))

LinkBlue = ParagraphStyle(name="LinkBlue", parent=P, textColor=colors.HexColor("#0a6aa1"), fontName=TITLE_FONT)

# ----------------------- UTILIDADES ----------------------- #
class UnderlineBar(Flowable):
    def __init__(self, width, height=0.22*cm, color=colors.HexColor('#f0a500')):
        Flowable.__init__(self)
        self.width = width
        self.height = height
        self.color = color
    def draw(self):
        self.canv.setFillColor(self.color)
        self.canv.rect(0, 0, self.width, self.height, stroke=0, fill=1)

def underline(width=2.2*cm, color=colors.HexColor('#f0a500')):
    return UnderlineBar(width, 0.22*cm, color)


def banner(path, ancho=A4[0]-2*cm):
    if not os.path.exists(path):
        return Paragraph(f"<i>Falta la imagen: {path}</i>", P_small)
    img = Image(path)
    img._restrictSize(ancho, 9*cm)
    return img


def image_box(path, width, height=4*cm):
    if not os.path.exists(path):
        return Paragraph(f"<i>Falta la imagen: {path}</i>", P_small)
    img = Image(path)
    img._restrictSize(width, height)  # fotos pequeñas
    return img


def pie_de_pagina(canvas, doc, agencia):
    canvas.saveState()
    w, h = A4
    canvas.setStrokeColor(colors.lightgrey)
    canvas.setLineWidth(0.3)
    canvas.line(1.5*cm, 1.7*cm, w-1.5*cm, 1.7*cm)
    if os.path.exists(agencia["logo"]):
        canvas.drawImage(agencia["logo"], 1.5*cm, 0.6*cm, width=2.2*cm, height=2.2*cm, preserveAspectRatio=True, mask='auto')
    canvas.setFont(BODY_FONT, 8)
    texto = f"{agencia['nombre']} – {agencia['direccion']} | Tel: {agencia['telefono']} | {agencia['correo']}"
    canvas.drawString(4.0*cm, 1.15*cm, texto)
    canvas.restoreState()

# ----------------------- SECCIONES ----------------------- #

def portada_story(modo="corporativo"):
    s = []
    imgs = RESERVA["imagenes"]

    # Logo arriba a la izquierda (más grande)
    if os.path.exists(AGENCIA["logo"]):
        logo_img = Image(AGENCIA["logo"])
        logo_img._restrictSize(3.8*cm, 3.8*cm)
        header = Table([[logo_img, ""]], colWidths=[4*cm, A4[0]-4*cm-3*cm])
        header.setStyle(TableStyle([('VALIGN',(0,0),(-1,-1),'TOP')]))
        s.append(header)
        s.append(Spacer(1,6))

    # 1er banner: portada
    s.append(banner(imgs["portada"]))
    s.append(Spacer(1, 10))

    # Títulos
    s.append(Paragraph(RESERVA["destino"], H1_corp if modo=="corporativo" else H1_tur))
    s.append(Paragraph("Documento de Reserva", H2_corp if modo=="corporativo" else H2_tur))
    # Código grande (24)
    s.append(Paragraph(f"Código: <b>{RESERVA['codigo']}</b>", CodeBig))
    s.append(Paragraph(f"Creado: {RESERVA['fecha_creacion']}", P_corp if modo=="corporativo" else P_tur))

    # Pax y nombres (en portada, bajo 'Creado')
    pax = RESERVA.get("pax", {})
    s.append(Paragraph(f"Pasajeros: {pax.get('adultos',0)} adultos, {pax.get('ninos',0)} niño(s)", P_small))
    nombres = ", ".join([p[0] for p in RESERVA["pasajeros"]])
    s.append(Paragraph(f"<b>Integrantes:</b> {nombres}", P_small))
    s.append(Spacer(1, 10))

    # Subtítulo tipo "Itinerario" con línea amarilla y etiqueta "Inicio del viaje"
    s.append(Paragraph("Itinerario", H1_corp if modo=="corporativo" else H1_tur))
    s.append(underline())
    s.append(Spacer(1,4))
    s.append(Paragraph("Inicio del viaje", P_right))
    s.append(Spacer(1,4))
    # Divider gris
    s.append(UnderlineBar(A4[0]-3*cm, 0.05*cm, colors.lightgrey))
    s.append(Spacer(1,6))
    return s


def flight_row(segmento: dict):
    # Construye una fila de itinerario estilo resume con logo + textos y línea divisoria
    logo = image_box(segmento.get('logo',''), width=1.6*cm, height=1.6*cm)
    textos = []
    textos.append(Paragraph(f"<b>{segmento.get('aerolinea','')}</b>", P))
    textos.append(Paragraph(segmento.get('texto',''), P))
    textos.append(Paragraph(segmento.get('detalle',''), P_small))
    textos.append(Paragraph(f"Código de reserva: <b>{segmento.get('codigo_reserva','')}</b>", P_small))
    cell = [textos]
    t = Table([[logo, cell]], colWidths=[2.0*cm, A4[0]-2.0*cm-3*cm])
    t.setStyle(TableStyle([
        ('VALIGN',(0,0),(-1,-1),'TOP'),
        ('LINEBELOW', (0,0), (-1,0), 0.4, colors.lightgrey),
        ('LEFTPADDING',(0,0),(-1,-1),0),('RIGHTPADDING',(0,0),(-1,-1),6),
        ('TOPPADDING',(0,0),(-1,-1),4),('BOTTOMPADDING',(0,0),(-1,-1),6),
    ]))
    return t


def seccion_itinerario(modo="corporativo"):
    s = []
    s.append(flight_row(RESERVA['rutas']['ida']))
    s.append(Spacer(1,4))
    s.append(flight_row(RESERVA['rutas']['regreso']))
    s.append(Spacer(1,4))
    s.append(Paragraph("El final del viaje", P_right))
    s.append(Spacer(1,4))
    s.append(UnderlineBar(A4[0]-3*cm, 0.05*cm, colors.lightgrey))
    s.append(Spacer(1,10))
    return s


def seccion_destino_banner(modo="corporativo"):
    # 2º banner + descripción y puntos de interés
    Pstyle = P_corp if modo=="corporativo" else P_tur
    H2style = H2_corp if modo=="corporativo" else H2_tur
    s = [banner(RESERVA["imagenes"]["destino"]), Spacer(1,8)]
    s.append(Paragraph("Sobre el destino", H2style))
    s.append(Paragraph(RESERVA["destino_descripcion"], Pstyle))
    pois = ", ".join(RESERVA.get("destino_pois", []))
    if pois:
        s.append(Paragraph(f"Puntos de interés: {pois}", P_small))
    s.append(Spacer(1,10))
    return s


def seccion_alojamiento(modo="corporativo"):
    H2style = H2_corp if modo=="corporativo" else H2_tur
    Pstyle = P_corp if modo=="corporativo" else P_tur
    hotel = RESERVA["hotel"]
    s = [Paragraph("Alojamiento", H2style)]
    s.append(Paragraph(hotel["nombre"], Pstyle))

    # Tabla con info del hotel
    data = [
        ["Dirección", hotel["direccion"]],
        ["Teléfono", hotel["telefono"]],
        ["Código de reserva del hotel", hotel["codigo_reserva"]],
        ["Check-in", hotel["check_in"]],
        ["Check-out", hotel["check_out"]],
        ["Habitaciones", str(hotel["habitaciones"])],
        ["Noches", str(hotel["noches"])],
    ]
    t = Table(data, colWidths=[6*cm, 10.5*cm])
    t.setStyle(TableStyle([
        ('GRID', (0,0), (-1,-1), 0.5, colors.black),
        ('BACKGROUND', (0,0), (-1,0), colors.whitesmoke),
        ('FONT', (0,0), (-1,-1), BODY_FONT, 9),
        ('FONT', (0,0), (0,-1), TITLE_FONT, 9),
        ('VALIGN', (0,0), (-1,-1), 'MIDDLE'),
        ('LEFTPADDING', (0,0), (-1,-1), 6),
        ('RIGHTPADDING', (0,0), (-1,-1), 6),
        ('TOPPADDING', (0,0), (-1,-1), 6),
        ('BOTTOMPADDING', (0,0), (-1,-1), 6),
    ]))
    s.append(t)
    s.append(Spacer(1,8))

    if hotel.get("notas"):
        s.append(Paragraph(f"<b>Notas para el hotel:</b> {hotel['notas']}", P_small))
        s.append(Spacer(1,6))

    # Galería de 3 fotos del hotel en una sola fila (pequeñas)
    fotos = hotel.get("fotos", [])
    if fotos:
        width_each = (A4[0] - 2*cm - 2*cm) / 3
        imgs = [image_box(p, width_each, 4*cm) for p in fotos[:3]]
        gal = Table([imgs], colWidths=[width_each]*len(imgs), hAlign='LEFT')
        s.append(gal)
        s.append(Spacer(1, 12))
    return s


def seccion_pasajeros_tabla(modo="corporativo"):
    H2style = H2_corp if modo=="corporativo" else H2_tur
    s = [Paragraph("Pasajeros en la reserva", H2style)]
    data = [["Nombre completo", "Documento", "Fecha de nacimiento"]] + RESERVA["pasajeros"]
    t = Table(data, colWidths=[8.5*cm, 4.0*cm, 4.0*cm])
    t.setStyle(TableStyle([
        ('GRID', (0,0), (-1,-1), 0.5, colors.black),
        ('BACKGROUND', (0,0), (-1,0), colors.whitesmoke),
        ('FONT', (0,0), (-1,0), TITLE_FONT, 10),
        ('VALIGN', (0,0), (-1,-1), 'MIDDLE'),
        ('FONTSIZE', (0,1), (-1,-1), 9),
        ('LEFTPADDING', (0,0), (-1,-1), 6),
        ('RIGHTPADDING', (0,0), (-1,-1), 6),
        ('TOPPADDING', (0,0), (-1,-1), 6),
        ('BOTTOMPADDING', (0,0), (-1,-1), 6),
    ]))
    s.append(t)
    s.append(Spacer(1, 12))
    return s


def seccion_tours(modo="corporativo"):
    H2style = H2_corp if modo=="corporativo" else H2_tur
    Pstyle = P_corp if modo=="corporativo" else P_tur
    s = [Paragraph("Tours", H2style)]
    for tour in RESERVA["tours"]:
        s.append(Paragraph(f"<b>{tour['nombre']}</b>", Pstyle))
        s.append(Paragraph("Incluye:", P_small))
        for it in tour.get("incluye",[]):
            s.append(Paragraph(f"• {it}", P_small))
        s.append(Paragraph("No incluye:", P_small))
        for it in tour.get("no_incluye",[]):
            s.append(Paragraph(f"• {it}", P_small))
        s.append(Spacer(1,6))
    s.append(Spacer(1, 12))
    return s

# Iconos (emojis) para la sección Incluye
INCLUDE_ICONS = ["🏨", "🍴", "🚌", "🩺", "🗺️"]

def seccion_incluye_no(modo="corporativo"):
    H2style = H2_corp if modo=="corporativo" else H2_tur
    Pstyle = P_corp if modo=="corporativo" else P_tur
    s = []
    s.append(Paragraph("Incluye", H2style))
    for idx, item in enumerate(RESERVA["incluye"]):
        icon = INCLUDE_ICONS[idx % len(INCLUDE_ICONS)]
        s.append(Paragraph(f"{icon} {item}", Pstyle))
    s.append(Spacer(1, 8))

    s.append(Paragraph("No incluye", H2style))
    for item in RESERVA["no_incluye"]:
        s.append(Paragraph(f"• {item}", Pstyle))
    s.append(Spacer(1, 12))
    return s


def seccion_precio_contacto(modo="corporativo"):
    H2style = H2_corp if modo=="corporativo" else H2_tur
    Pstyle = P_corp if modo=="corporativo" else P_tur
    s = [Paragraph("Precio y forma de pago", H2style)]
    s.append(Paragraph(f"Precio total del plan: <b>{RESERVA['precio']['total']}</b>", Pstyle))
    s.append(Paragraph(f"Abono: <b>{RESERVA['precio']['abono']}</b>", Pstyle))
    s.append(Paragraph(f"Saldo pendiente: <b>{RESERVA['precio']['saldo']}</b>", Pstyle))
    s.append(Spacer(1, 8))
    s.append(Paragraph(RESERVA['precio']['clausula'], P_small))
    s.append(Spacer(1, 12))

    s.append(Paragraph("Contacto", H2style))
    s.append(Paragraph(f"{AGENCIA['nombre']}<br/>{AGENCIA['direccion']}<br/>Tel: {AGENCIA['telefono']} – {AGENCIA['correo']}", Pstyle))
    s.append(Spacer(1, 12))

    url = RESERVA.get('terminos_url','')
    s.append(Paragraph(f"<font color='#0a6aa1'><b>Términos y Condiciones:</b> <a href='{url}' color='blue'>{url}</a></font>", LinkBlue))
    s.append(Spacer(1, 8))

    s.append(Paragraph("AL Mundo Tours se acoge a la ley 679 del 2001 que en su parte pertinente dice: “La explotación y abuso sexual de menores de edad es sancionada con pena privativa de la libertad", P_small))
    s.append(Spacer(1, 10))
    s.append(Paragraph("Gracias por viajar con AL Mundo Tours, tu viaje comienza aquí", P_center))
    return s

# ----------------------- GENERACIÓN ----------------------- #

def construir_pdf(nombre_archivo, modo="corporativo"):
    story = []

    # Portada con 1er banner y datos
    story += portada_story(modo)

    # Itinerario estilo resumen con logos
    story += seccion_itinerario(modo)

    # 2º banner del destino + descripción + POIs
    story += seccion_destino_banner(modo)

    # Alojamiento con datos de hotel y galería en una sola fila
    story += seccion_alojamiento(modo)

    # Tabla de pasajeros completa (además de los nombres en portada)
    story += seccion_pasajeros_tabla(modo)

    # Tours
    story += seccion_tours(modo)

    # Incluye / No incluye generales (con iconos en Incluye)
    story += seccion_incluye_no(modo)

    # Precio + Contacto + Cierre + T&C
    story += seccion_precio_contacto(modo)

    doc = SimpleDocTemplate(
        nombre_archivo,
        pagesize=A4,
        rightMargin=1.5*cm,
        leftMargin=1.5*cm,
        topMargin=1.5*cm,
        bottomMargin=2.2*cm,
    )
    doc.build(story, onFirstPage=lambda c, d: pie_de_pagina(c, d, AGENCIA), onLaterPages=lambda c, d: pie_de_pagina(c, d, AGENCIA))


if __name__ == "__main__":
    construir_pdf("Reserva_SanAndres_Corporativo.pdf", modo="corporativo")
    construir_pdf("Reserva_SanAndres_Turistico.pdf", modo="turistico")
    print("Listo: se generaron 'Reserva_SanAndres_Corporativo.pdf' y 'Reserva_SanAndres_Turistico.pdf'")
